 #bin/bash

if [ "$1" = "install" ]; then
   path_of_arwbuild="$(find ~/.arrow/repos -type d -name '*txt*')"
   source $path_of_arwbuild/ARWBUILD
   echo "Package Name : $pkgname"
   echo "Package Version : $pkgver"
   echo "Package Size : $(curl -s -L -I $source | gawk -v IGNORECASE=1 '/^Content-Length/ { printf "%.2f MB\n", $2/1024/1024 }')"
   echo "Arrow ready for installation."
   echo -n "Are you sure ? [Y\n] : "
   read are_you_sure

   if [ "$are_you_sure" = "Y" ] || [ "$are_you_sure" = "y" ] || [ "$are_you_sure" = "yes" ]; then
     echo "LETS DO IT!"

     curl -L $source > ~/.arrow/source/$(basename "$source")

     if type prepare >/dev/null 2>&1 ; then prepare ; fi
     if type build >/dev/null 2>&1 ; then build ; fi
     if type package >/dev/null 2>&1 ; then package ; fi
     if type check >/dev/null 2>&1 ; then check ; fi
     echo -ne '\n'
     echo "Installation finished."
   else
     echo "OK!"
   fi
fi

if [ "$1" = "remove" ]; then
  find "source" -type f -name "$2-*.*" -exec rm -r {} + &> /dev/null
  find "packages" -type d -name "$2-*.*" -exec rm -r {} + &> /dev/null
  find "bin" -type f -name "$2-*.*" -exec rm -r {} + &> /dev/null
  echo "Removed the package : $2"
fi

if [ "$1" = "addrepo" ]; then
   echo "Searching $2 with $3 name repo..."
   mkdir ~/.arrow/repos/$3 &> /dev/null
   git clone $2 ~/.arrow/repos/$3 &> /dev/null
   echo "Finished repo add."
fi

if [ "$1" = "rmrepo" ]; then
 find ~/.arrow/repos/ -type d -name "$2" -exec rm -rf {} +
 echo "Removed repo."
fi
